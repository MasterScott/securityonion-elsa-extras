#!/bin/bash


#########################################
# Variables
#########################################

# A banner for user output
BANNER="----------------------------------------------------"

# Log to file
LOG=0

# Reset ELSA index and archives
RESET=0

# Skip interactive key presses
SKIP=0

# View only mode
VIEW=0


#########################################
# Got r00t?
#########################################
if [[ $(/usr/bin/id -u) -ne 0 ]]; then
    echo "This script needs to be run as root.  Please try again using sudo."
    exit
fi


#########################################
# Options
#########################################
usage()
{
cat <<EOF

Security Onion ELSA Reset

  Options:
  -h         This message
  -l <file>  Log stdout and stderr to specified file (Use with '-y')
  -r         Reset tables and files
  -v         View only mode
  -y         Skip interactive mode

  Usage:
    Show help file.
    $0 -h

    Show relevant ELSA tables and files.
    $0 -v

    Reset ELSA index and archives.
    $0 -y -r

EOF
}


view()
{
	echo $BANNER
  echo "MySQL contents of 'syslog_data':"
  mysql --defaults-file=/etc/mysql/debian.cnf syslog_data -e 'SHOW TABLES'

  echo
  echo "MySQL contents of 'syslog.tables':"
  mysql --defaults-file=/etc/mysql/debian.cnf syslog -e 'SELECT * FROM tables'

  echo
  echo "Folder contents of '/nsm/elsa/data/elsa/mysql/':"
  echo $BANNER
  find /nsm/elsa/data/elsa/mysql/ -name 'syslogs*' | sort

  echo
  echo "Folder contents of '/var/lib/mysql/syslog_data/':"
  echo $BANNER
  find /var/lib/mysql/syslog_data/ -name 'syslogs*' | sort

	echo
}


#########################################
# Check if no arguments passed
#########################################
if [ $# -eq 0 ]; then
	echo "error: argument required"

	usage
	exit 0
	fi


while getopts "hl:rvy" OPTION
do
     case $OPTION in
			h)
				usage
				exit 0
				;;
			l)
				LOG=1
        LOGFILE="$OPTARG"
        ;;
			r)
				RESET=1
				;;
			v)
				VIEW=1
				;;
      y)
				SKIP=1
        ;;
      *)
				usage
				exit 0
				;;
     esac
done


if [ $LOG -eq 1 ]; then
	echo -e "\n --> Logging stdout & stderr to $LOGFILE"
	exec > "$LOGFILE" 2>&1
fi


if [ $VIEW -eq 1 ]; then
  view
  exit 0
  fi


if [ $SKIP -ne 1 ]; then
	# Prompt user to continue
	echo $BANNER
	echo "This script will reset the ELSA database."
	echo
	echo "Continuing will erase all data in the ELSA database."
	echo
	echo "Press Enter to continue or Ctrl-C to cancel."
	read input
	echo $BANNER
fi


if [ $RESET -ne 1 ]; then
  echo "error: 'RESET' not specified, nothing to do"
  usage
  exit 0
  fi


echo "Stopping services..."
service nsm stop
service syslog-ng stop
echo

echo "Generating lists for removal:"
echo "  accessing database 'syslog_data'"
TABLES_SYSLOG_DATA=$(mysql --defaults-file=/etc/mysql/debian.cnf syslog_data --batch -e 'SHOW TABLES' | grep -v '^Table' | awk '{print "syslog_data."$1}')

echo "  accessing table 'syslog.tables'"
TABLES_SYSLOG=$(mysql --defaults-file=/etc/mysql/debian.cnf syslog --batch -e 'SELECT * FROM tables' | grep -v '^id' | awk '{print $2}')

echo
echo "Removing data:"
echo "  deleting tables from 'syslog_data'"
for t1 in $TABLES_SYSLOG_DATA
do
    mysql --defaults-file=/etc/mysql/debian.cnf syslog_data -e "DROP TABLE $t1"
done

echo "  deleting rows from 'syslog.tables'"
for t2 in $TABLES_SYSLOG
do
    mysql --defaults-file=/etc/mysql/debian.cnf syslog -e "DELETE FROM syslog.tables WHERE table_name='$t2'"
done

echo "  deleting files from /var/lib/mysql/syslog_data/"
find /var/lib/mysql/syslog_data/ -name 'syslogs*' -delete

echo "  deleting files from /nsm/elsa/data/elsa/mysql/"
find /nsm/elsa/data/elsa/mysql/ -name 'syslogs*' -delete

echo
echo "Restarting services..."
service mysql restart
service syslog-ng restart
service nsm start

echo
echo "Done."
echo
echo "Log onto ELSA and review 'logs indexed' and 'archived'"
echo "statistics visible in the top right corner of the web console."
echo "Depending on your ELSA configuration and activity on your"
echo "network, these statistics will begin to climb."
echo
